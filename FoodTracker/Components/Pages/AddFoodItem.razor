@page "/AddFoodItem"
@rendermode InteractiveServer

@* Usings *@
@using Scripts.DataBase
@using Components.FoodStuff

@* Injects *@
@inject DBManager dbManager

<PageTitle> Create Food Item </PageTitle>

<h3>Modify Food Items</h3>

@* Add a food item *@
<FoodTracker.Components.FoodStuff.FoodItemAdder OnAddComplete="LoadFoodItemsSync"/>

@* Edit food items *@
<button onclick=@(() => {_allowDeletes = !_allowDeletes;})>Allow deletes: @_allowDeletes</button>

@if(_foodItems != null)
{        
    foreach (MongoFoodItem foodItem in _foodItems)
    {        
        <FoodTracker.Components.FoodStuff.FoodItemEditor foodItem="foodItem"/> @* TODO: Figure out why the using tag isn't working, I dont like having the full name here*@
        if(_allowDeletes)
        {
            <FoodTracker.Components.FoodStuff.FoodItemDeletor foodItemID="foodItem.Id" ReloadFoodItems="LoadFoodItemsSync"/>            
        }
        
    }
}

@code {
    [SupplyParameterFromForm]
    private MongoFoodItem? _foodItemToAdd { get; set; } = new MongoFoodItem();
    private List<MongoFoodItem>? _foodItems = new List<MongoFoodItem>();

    private (bool success, List<string> messages)? _insertStatus;

    private bool _allowDeletes = false;

    private async void SubmitFoodItem()
    {
        if (_foodItemToAdd == null) return;

        _foodItemToAdd.Id = new();
        _insertStatus = dbManager.TryInsertFoodItem(_foodItemToAdd);

        await LoadFoodItems();
    }

    private void ClearInsertStatus()
    {
        _insertStatus = null;
    }

    Task LoadFoodItemsTask()
    {
        _foodItems?.Clear();
        _foodItems = dbManager.GetAllFoodItems();
        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadFoodItems();
    }

    private async Task LoadFoodItems()
    {
        await LoadFoodItemsTask();
    }

    private void LoadFoodItemsSync()
    {
        _foodItems?.Clear();
        _foodItems = dbManager.GetAllFoodItems();
        StateHasChanged();
    }
}
