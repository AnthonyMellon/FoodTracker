@page "/AddFoodItem"
@rendermode InteractiveServer

@* Usings *@
@using Scripts.DataBase
@using Components.FoodStuff

@* Injects *@
@inject DBManager dbManager

<PageTitle> Create Food Item </PageTitle>

<content>    
    <h3>Modify Food Items</h3>

    @* Add a food item *@
    <FoodTracker.Components.FoodStuff.FoodItemAdder OnAddComplete="LoadFoodItemsSync" />

    @* Toggle deletes *@
    <button onclick=@ToggleAllowDeletes>Allow deletes: @_allowDeletes</button>

    @* Edit food items *@

    @if (_foodItems != null)
    {
        foreach (MongoFoodItem foodItem in _foodItems)
        {
            <FoodTracker.Components.FoodStuff.FoodItemEditor foodItem="foodItem" /> @* TODO: Figure out why the using tag isn't working, I dont like having the full name here*@
            if (_allowDeletes)
            {
                <FoodTracker.Components.FoodStuff.FoodItemDeletor foodItemID="foodItem.Id" OnDeleteComplete="LoadFoodItemsSync" />
            }

        }
    }
</content>



@code {
    [SupplyParameterFromForm]
    private MongoFoodItem? _foodItemToAdd { get; set; } = new MongoFoodItem();
    private List<MongoFoodItem>? _foodItems = new List<MongoFoodItem>();

    private bool _allowDeletes = false;

    private void ToggleAllowDeletes()
    {
        _allowDeletes = !_allowDeletes;
    }

    Task LoadFoodItemsTask()
    {
        _foodItems?.Clear();
        _foodItems = dbManager.GetAllFoodItems();
        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadFoodItems();
    }

    private async Task LoadFoodItems()
    {
        await LoadFoodItemsTask();
    }

    private void LoadFoodItemsSync()
    {
        _foodItems?.Clear();
        _foodItems = dbManager.GetAllFoodItems();
        StateHasChanged();
    }
}
