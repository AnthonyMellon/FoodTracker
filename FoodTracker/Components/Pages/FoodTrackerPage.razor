@page "/FoodTrackerPage"
@rendermode InteractiveServer

@* Usings *@
@using global::FoodTracker.Scripts
@using global::FoodTracker.Scripts.DataBase
@using global::FoodTracker.Scripts.Utils
@using MongoDB.Bson
@using FoodTracker.Components.Utils
@using FoodTracker.Components.FoodStuff

@* Injects *@
@inject DBManager dbManager

<link href="./Styles/FoodTracker.css" rel="stylesheet"/>

<PageTitle>Foood Tracker</PageTitle>

<h3>Welcome to your food tracker</h3>

<ItemSelector Items="@_selectableFoodItems" AddItem="@AddSelectedFood" />
<FoodItemLister foodItems="_selectedFoodItems" />
<div>
    <label>Totals</label>
    <TotalMacroDisplayer FoodItems="_selectedFoodItems" />
</div>

@code
{
    public string? selectedFood { get; private set; }
    private List<FoodItem> _foodItems = new List<FoodItem>();
    private List<SelectableMongoItem> _selectableFoodItems = new List<SelectableMongoItem>();
    private List<FoodItem> _selectedFoodItems = new List<FoodItem>();

    private void AddSelectedFood(string selected)
    {
        //Find and add the selected food item
        FoodItem? selectedItem = (_foodItems.Find(e => e.Id.ToString() == selected));
        if (selectedItem != null) _selectedFoodItems.Add(selectedItem);
    }

    Task LoadSelectableFoodItems()
    {
        _foodItems.Clear();

        List<MongoFoodItem>? mongoFoodItems = dbManager.FoodItemManager.GetAllItems();        

        if(mongoFoodItems != null)
        {
            foreach (MongoFoodItem foodItem in mongoFoodItems) //Convert all the mongoFoodItems to foodItems
            {
                _foodItems.Add(new FoodItem(
                    foodItem.Id,
                    foodItem.Name,
                    (float)foodItem.Calories,
                    (float)foodItem.Protein,
                    (float)foodItem.Carbs,
                    (float)foodItem.Fat
            ));}
        }

        _selectableFoodItems = _foodItems.Select(i => new SelectableMongoItem(i.Id, i.Name)).ToList();

        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadSelectableFoodItems();
    }
}