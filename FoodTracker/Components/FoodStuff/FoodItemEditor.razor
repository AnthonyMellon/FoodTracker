@* Usings *@
@using System.Text
@using Scripts.DataBase
@using FoodTracker.Components.UserFeedback

@* Injects *@
@inject DBManager dbManager

@if(foodItem != null)
{
    StringBuilder sb = new StringBuilder("edit-food-");
    sb.Append(foodItem.Id);
    string formName = sb.ToString();

    <form method="post" @onsubmit=Edit @formname=@formName>
        <AntiforgeryToken />
        
        <InputText @bind-Value="foodItem.Name"></InputText>
        <InputNumber @bind-Value="foodItem.Calories"></InputNumber>
        <InputNumber @bind-Value="foodItem.Protein"></InputNumber>
        <InputNumber @bind-Value="foodItem.Carbs"></InputNumber>
        <InputNumber @bind-Value="foodItem.Fat"></InputNumber>

        <button type="submit">Save Changes</button>  
               
    </form>
    <MessageDisplayer messages="_lastEditStatus.messages" ClearStatus="ClearStatus"/>
}



@code {
    [Parameter] public MongoFoodItem foodItem { get; set; } = new MongoFoodItem();
    private (bool success, List<string> messages) _lastEditStatus = (false, new List<string>());

    private async void Edit()
    {
        _lastEditStatus = await dbManager.FoodItemManager.TryUpdateItem(foodItem);
    }

    private void ClearStatus()
    {
        _lastEditStatus = (false, new List<string>());
    }
}
